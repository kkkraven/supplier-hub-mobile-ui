'use client';

import React, { useState } from 'react';
import { Check, ArrowRight, Star, Shield, Zap, Users, Globe, Award } from 'lucide-react';
import { Button } from '../ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '../ui/card';
import { Badge } from '../ui/badge';
import { useRouter } from 'next/navigation';

interface PricingPageProps {
  onNavigate?: (page: string) => void;
}

export function PricingPage({ onNavigate }: PricingPageProps) {
  const [selectedPlan, setSelectedPlan] = useState('pro');
  const router = useRouter();

  const handleNavigate = (page: string) => {
    if (onNavigate) {
      onNavigate(page);
    } else {
      switch (page) {
        case 'landing':
          router.push('/');
          break;
        case 'catalog':
          router.push('/catalog');
          break;
        case 'pricing':
          router.push('/pricing');
          break;
        case 'onboarding':
          router.push('/onboarding');
          break;
        default:
          router.push('/');
      }
    }
  };

  const plans = [
    {
      id: 'starter',
      name: 'Starter',
      icon: Zap,
      description: '–î–ª—è —Å—Ç–∞—Ä—Ç–∞–ø–æ–≤ –∏ –Ω–µ–±–æ–ª—å—à–∏—Ö –±—Ä–µ–Ω–¥–æ–≤',
      monthlyPrice: 300,
      annualPrice: 3000,
      popular: false,
      features: [
        '–î–æ—Å—Ç—É–ø –∫ 20 —Ñ–∞–±—Ä–∏–∫–∞–º',
        '–î–æ 5 RFQ –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –º–µ—Å—è—Ü',
        '–ë–∞–∑–æ–≤–∞—è —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞',
        '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã –ø–æ–∏—Å–∫–∞',
        'Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è',
        '–û—Å–Ω–æ–≤–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞'
      ],
      limitations: [
        '–û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ –ø—Ä–µ–º–∏—É–º —Ñ–∞–±—Ä–∏–∫–∞–º',
        '–ë–∞–∑–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–±—Ä–∏–∫',
        '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –æ—Ç–≤–µ—Ç–∞'
      ]
    },
    {
      id: 'professional',
      name: 'Professional',
      icon: Users,
      description: '–î–ª—è —Ä–∞—Å—Ç—É—â–∏—Ö –∫–æ–º–ø–∞–Ω–∏–π',
      monthlyPrice: 800,
      annualPrice: 8000,
      popular: true,
      features: [
        '–î–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º 70+ —Ñ–∞–±—Ä–∏–∫–∞–º',
        '–ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–µ RFQ –∑–∞–ø—Ä–æ—Å—ã',
        '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞',
        '–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã –∏ –ø–æ–∏—Å–∫',
        'Push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è',
        '–î–µ—Ç–∞–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞',
        '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä',
        '–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—Ä–∞–∑—Ü–æ–≤',
        '–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –¥–æ–≥–æ–≤–æ—Ä–æ–≤'
      ],
      limitations: []
    },
    {
      id: 'enterprise',
      name: 'Enterprise',
      icon: Globe,
      description: '–î–ª—è –∫—Ä—É–ø–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏–π',
      monthlyPrice: 2000,
      annualPrice: 20000,
      popular: false,
      features: [
        '–í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ Professional',
        '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ –Ω–æ–≤—ã–º —Ñ–∞–±—Ä–∏–∫–∞–º',
        '–ö–∞—Å—Ç–æ–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ RFQ —à–∞–±–ª–æ–Ω—ã',
        '–ë–µ–ª—ã–π –ª–µ–π–±–ª —Ä–µ—à–µ–Ω–∏–µ',
        '24/7 —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞',
        '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å CRM/ERP',
        '–ö–æ–º–∞–Ω–¥–∞ —ç–∫—Å–ø–µ—Ä—Ç–æ–≤',
        '–í–∏–∑–∏—Ç—ã –Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ',
        '–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞',
        '–≠—Å–∫—Ä–æ—É —Å–µ—Ä–≤–∏—Å'
      ],
      limitations: []
    }
  ];

  const features = [
    {
      category: '–î–æ—Å—Ç—É–ø –∫ —Ñ–∞–±—Ä–∏–∫–∞–º',
      items: [
        { name: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–±—Ä–∏–∫', starter: '20', professional: '70+', enterprise: '70+ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç' },
        { name: '–ù–æ–≤—ã–µ —Ñ–∞–±—Ä–∏–∫–∏', starter: '–ß–µ—Ä–µ–∑ 30 –¥–Ω–µ–π', professional: '–ß–µ—Ä–µ–∑ 7 –¥–Ω–µ–π', enterprise: '–ú–≥–Ω–æ–≤–µ–Ω–Ω–æ' },
        { name: '–ü—Ä–µ–º–∏—É–º —Ñ–∞–±—Ä–∏–∫–∏', starter: '‚ùå', professional: '‚úÖ', enterprise: '‚úÖ' },
        { name: '–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è —Ñ–∞–±—Ä–∏–∫', starter: '–ë–∞–∑–æ–≤–∞—è', professional: '–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è', enterprise: '–ü–æ–ª–Ω–∞—è + –≤–∏–∑–∏—Ç—ã' }
      ]
    },
    {
      category: 'RFQ —Å–∏—Å—Ç–µ–º–∞',
      items: [
        { name: 'RFQ –∑–∞–ø—Ä–æ—Å—ã –≤ –º–µ—Å—è—Ü', starter: '5', professional: '–ë–µ–∑–ª–∏–º–∏—Ç', enterprise: '–ë–µ–∑–ª–∏–º–∏—Ç' },
        { name: '–®–∞–±–ª–æ–Ω—ã RFQ', starter: '–ë–∞–∑–æ–≤—ã–µ', professional: '–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ', enterprise: '–ö–∞—Å—Ç–æ–º–Ω—ã–µ' },
        { name: '–°–∫–æ—Ä–æ—Å—Ç—å –æ—Ç–≤–µ—Ç–∞', starter: '48-72—á', professional: '24-48—á', enterprise: '12-24—á' },
        { name: '–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—Ä–∞–∑—Ü–æ–≤', starter: '‚ùå', professional: '‚úÖ', enterprise: '‚úÖ + –≤–∏–∑–∏—Ç—ã' }
      ]
    },
    {
      category: '–ü–æ–¥–¥–µ—Ä–∂–∫–∞',
      items: [
        { name: '–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞', starter: 'Email', professional: 'Email + –ß–∞—Ç', enterprise: '24/7 –≤—Å–µ –∫–∞–Ω–∞–ª—ã' },
        { name: '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä', starter: '‚ùå', professional: '‚úÖ', enterprise: '‚úÖ + –∫–æ–º–∞–Ω–¥–∞' },
        { name: '–í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞', starter: '24-48—á', professional: '4-8—á', enterprise: '1-2—á' },
        { name: '–Ø–∑—ã–∫–∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏', starter: 'RU', professional: 'RU + EN', enterprise: 'RU + EN + CN' }
      ]
    }
  ];

  const testimonials = [
    {
      name: 'Anna K.',
      company: 'Eco Fashion Brand',
      plan: 'Professional',
      text: '–ó–∞ 2 –º–µ—Å—è—Ü–∞ –Ω–∞—à–ª–∏ –∏–¥–µ–∞–ª—å–Ω—É—é —Ñ–∞–±—Ä–∏–∫—É –¥–ª—è –æ—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∏—Ö —Ñ—É—Ç–±–æ–ª–æ–∫. –ö–∞—á–µ—Å—Ç–≤–æ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–∞–±—Ä–∏–∫ –≤–ø–µ—á–∞—Ç–ª—è–µ—Ç.',
      avatar: 'https://images.unsplash.com/photo-1494790108755-2616b612b786?w=100&h=100&fit=crop&auto=format&q=80'
    },
    {
      name: 'Dmitri S.',
      company: 'SportTech Startup',
      plan: 'Starter',
      text: '–ù–∞—á–∞–ª–∏ —Å–æ Starter –ø–ª–∞–Ω–∞ –∏ –∑–∞ –ø–æ–ª–≥–æ–¥–∞ –∑–∞–ø—É—Å—Ç–∏–ª–∏ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–π –æ–¥–µ–∂–¥—ã. –û—Ç–ª–∏—á–Ω–æ–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Ü–µ–Ω–∞-–∫–∞—á–µ—Å—Ç–≤–æ.',
      avatar: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=100&h=100&fit=crop&auto=format&q=80'
    },
    {
      name: 'Marina P.',
      company: 'Fashion House',
      plan: 'Enterprise',
      text: 'Enterprise –ø–ª–∞–Ω –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø–æ–∫—Ä—ã–≤–∞–µ—Ç –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –∫—Ä—É–ø–Ω–æ–≥–æ –±—Ä–µ–Ω–¥–∞. –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ - —ç—Ç–æ —Ç–æ —á—Ç–æ –Ω—É–∂–Ω–æ.',
      avatar: 'https://images.unsplash.com/photo-1438761681033-6461ffad8d80?w=100&h=100&fit=crop&auto=format&q=80'
    }
  ];

  const handleSelectPlan = (planId: string) => {
    setSelectedPlan(planId);
    // Here you would integrate with payment system
    handleNavigate('onboarding');
  };

  return (
    <div className="min-h-screen bg-gray-50">
      {/* Header */}
      <section className="bg-white border-b border-gray-200">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
          <Button
            variant="ghost"
            className="mb-6"
            onClick={() => handleNavigate('landing')}
          >
            <ArrowRight className="w-4 h-4 mr-2" />
            –ù–∞–∑–∞–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é
          </Button>
          
          <div className="text-center">
            <h1 className="text-4xl md:text-5xl font-bold text-gray-900 mb-6">
              –¢–∞—Ä–∏—Ñ—ã –∏ —Ü–µ–Ω—ã
            </h1>
            <p className="text-xl text-gray-600 mb-8 max-w-3xl mx-auto">
              –í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞–Ω, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥—Ö–æ–¥–∏—Ç –≤–∞—à–µ–º—É –±–∏–∑–Ω–µ—Å—É. –í—Å–µ –ø–ª–∞–Ω—ã –≤–∫–ª—é—á–∞—é—Ç –ø–æ–ª–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É —Ñ–∞–±—Ä–∏–∫ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫—É.
            </p>
            
            {/* Billing Toggle */}
            <div className="flex items-center justify-center gap-4 mb-8">
              <span className={`text-sm ${selectedPlan !== 'pro' ? 'font-medium text-gray-900' : 'text-gray-500'}`}>
                –ú–µ—Å—è—á–Ω–∞—è –æ–ø–ª–∞—Ç–∞
              </span>
              <Badge className="bg-success text-white ml-2">
                –°–∫–∏–¥–∫–∞ 17%
              </Badge>
            </div>
          </div>
        </div>
      </section>

      {/* Pricing Cards */}
      <section className="py-16">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="grid lg:grid-cols-3 gap-8">
            {plans.map((plan) => {
              const Icon = plan.icon;
              const price = selectedPlan === 'pro' ? plan.annualPrice : plan.monthlyPrice;
              const period = selectedPlan === 'pro' ? '–≥–æ–¥' : '–º–µ—Å—è—Ü';
              
              return (
                <Card 
                  key={plan.id}
                  className={`relative overflow-hidden transition-all duration-300 hover:shadow-xl ${
                    plan.popular ? 'ring-2 ring-primary shadow-lg scale-105' : ''
                  }`}
                >
                  {plan.popular && (
                    <div className="absolute top-0 left-0 right-0 bg-primary text-white text-center py-2 text-sm font-medium">
                      üî• –°–∞–º—ã–π –ø–æ–ø—É–ª—è—Ä–Ω—ã–π
                    </div>
                  )}
                  
                  <CardHeader className={`text-center ${plan.popular ? 'pt-8' : 'pt-6'}`}>
                    <div className="w-16 h-16 bg-primary/10 rounded-full flex items-center justify-center mx-auto mb-4">
                      <Icon className="w-8 h-8 text-primary" />
                    </div>
                    <CardTitle className="text-2xl font-bold">{plan.name}</CardTitle>
                    <p className="text-gray-600">{plan.description}</p>
                  </CardHeader>
                  
                  <CardContent className="px-6 pb-6">
                    <div className="text-center mb-6">
                      <div className="text-4xl font-bold text-gray-900 mb-2">
                        ${price.toLocaleString()}
                      </div>
                      <div className="text-gray-500">–∑–∞ {period}</div>
                      {selectedPlan === 'pro' && (
                        <div className="text-sm text-success mt-1">
                          –≠–∫–æ–Ω–æ–º–∏—è ${((plan.monthlyPrice * 12) - plan.annualPrice).toLocaleString()}/–≥–æ–¥
                        </div>
                      )}
                    </div>
                    
                    <Button
                      className={`w-full mb-6 ${
                        plan.popular 
                          ? 'gradient-factura' 
                          : 'bg-gray-900 hover:bg-gray-800 text-white'
                      }`}
                      onClick={() => handleSelectPlan(plan.id)}
                    >
                      {plan.popular ? '–ù–∞—á–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ' : '–í—ã–±—Ä–∞—Ç—å –ø–ª–∞–Ω'}
                    </Button>
                    
                    <div className="space-y-3">
                      <h4 className="font-medium text-gray-900">–í–∫–ª—é—á–µ–Ω–æ –≤ –ø–ª–∞–Ω:</h4>
                      {plan.features.map((feature, index) => (
                        <div key={index} className="flex items-start gap-3">
                          <Check className="w-5 h-5 text-success mt-0.5 flex-shrink-0" />
                          <span className="text-sm text-gray-700">{feature}</span>
                        </div>
                      ))}
                      
                      {plan.limitations.length > 0 && (
                        <>
                          <div className="pt-4 border-t border-gray-200">
                            <h4 className="font-medium text-gray-900 mb-3">–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:</h4>
                            {plan.limitations.map((limitation, index) => (
                              <div key={index} className="flex items-start gap-3 mb-2">
                                <span className="w-5 h-5 text-warning mt-0.5 flex-shrink-0">‚ö†Ô∏è</span>
                                <span className="text-sm text-gray-600">{limitation}</span>
                              </div>
                            ))}
                          </div>
                        </>
                      )}
                    </div>
                  </CardContent>
                </Card>
              );
            })}
          </div>
        </div>
      </section>

      {/* Feature Comparison */}
      <section className="py-16 bg-white">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center mb-12">
            <h2 className="text-3xl font-bold text-gray-900 mb-4">
              –ü–æ–¥—Ä–æ–±–Ω–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø–ª–∞–Ω–æ–≤
            </h2>
            <p className="text-lg text-gray-600">
              –°—Ä–∞–≤–Ω–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∫–∞–∂–¥–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞
            </p>
          </div>

          <div className="overflow-x-auto">
            <table className="w-full border-collapse bg-white rounded-lg shadow-sm">
              <thead>
                <tr className="border-b border-gray-200">
                  <th className="text-left p-4 font-medium text-gray-900">–§—É–Ω–∫—Ü–∏—è</th>
                  <th className="text-center p-4 font-medium text-gray-900">Starter</th>
                  <th className="text-center p-4 font-medium text-gray-900 bg-primary/5">
                    Professional
                    <Badge className="bg-primary text-white ml-2 text-xs">–ü–æ–ø—É–ª—è—Ä–Ω—ã–π</Badge>
                  </th>
                  <th className="text-center p-4 font-medium text-gray-900">Enterprise</th>
                </tr>
              </thead>
              <tbody>
                {features.map((category) => (
                  <React.Fragment key={category.category}>
                    <tr className="bg-gray-50">
                      <td colSpan={4} className="p-4 font-semibold text-gray-900 border-b border-gray-200">
                        {category.category}
                      </td>
                    </tr>
                    {category.items.map((item, index) => (
                      <tr key={index} className="border-b border-gray-100">
                        <td className="p-4 text-gray-700">{item.name}</td>
                        <td className="p-4 text-center text-gray-600">{item.starter}</td>
                        <td className="p-4 text-center text-gray-600 bg-primary/5 font-medium">{item.professional}</td>
                        <td className="p-4 text-center text-gray-600">{item.enterprise}</td>
                      </tr>
                    ))}
                  </React.Fragment>
                ))}
              </tbody>
            </table>
          </div>
        </div>
      </section>

      {/* Testimonials */}
      <section className="py-16 bg-gray-50">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center mb-12">
            <h2 className="text-3xl font-bold text-gray-900 mb-4">
              –û—Ç–∑—ã–≤—ã –∫–ª–∏–µ–Ω—Ç–æ–≤
            </h2>
            <p className="text-lg text-gray-600">
              –ß—Ç–æ –≥–æ–≤–æ—Ä—è—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –æ –Ω–∞—à–∏—Ö —Ç–∞—Ä–∏—Ñ–∞—Ö
            </p>
          </div>

          <div className="grid md:grid-cols-3 gap-4">
            {testimonials.map((testimonial, index) => (
              <Card key={index} className="bg-white">
                <CardContent className="p-6">
                  <div className="flex items-center gap-1 mb-4">
                    {[...Array(5)].map((_, i) => (
                      <Star key={i} className="w-4 h-4 fill-warning text-warning" />
                    ))}
                  </div>
                  <p className="text-gray-700 mb-4 italic">
                    "{testimonial.text}"
                  </p>
                  <div className="flex items-center gap-3">
                    <img
                      src={testimonial.avatar}
                      alt={testimonial.name}
                      className="w-10 h-10 rounded-full object-cover"
                    />
                    <div>
                      <p className="font-medium text-gray-900">{testimonial.name}</p>
                      <p className="text-sm text-gray-600">{testimonial.company}</p>
                    </div>
                    <Badge variant="secondary" className="ml-auto text-xs">
                      {testimonial.plan}
                    </Badge>
                  </div>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>

      {/* FAQ */}
      <section className="py-16 bg-white">
        <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center mb-12">
            <h2 className="text-3xl font-bold text-gray-900 mb-4">
              –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã
            </h2>
          </div>

          <div className="grid md:grid-cols-2 gap-8">
            <div className="space-y-6">
              <div>
                <h4 className="font-semibold text-gray-900 mb-2">
                  –ú–æ–∂–Ω–æ –ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å –ø–ª–∞–Ω –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è?
                </h4>
                <p className="text-gray-600 text-sm">
                  –î–∞, –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–≤—ã—Å–∏—Ç—å –∏–ª–∏ –ø–æ–Ω–∏–∑–∏—Ç—å —Ç–∞—Ä–∏—Ñ –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è. –ü—Ä–∏ –ø–æ–≤—ã—à–µ–Ω–∏–∏ –ø–ª–∞–Ω–∞ –¥–æ–ø–ª–∞—á–∏–≤–∞–µ—Ç–µ —Ä–∞–∑–Ω–∏—Ü—É, –ø—Ä–∏ –ø–æ–Ω–∏–∂–µ–Ω–∏–∏ –ø–æ–ª—É—á–∞–µ—Ç–µ –∫—Ä–µ–¥–∏—Ç –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –ø–µ—Ä–∏–æ–¥.
                </p>
              </div>
              <div>
                <h4 className="font-semibold text-gray-900 mb-2">
                  –ï—Å—Ç—å –ª–∏ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥?
                </h4>
                <p className="text-gray-600 text-sm">
                  –î–∞, –≤—Å–µ –ø–ª–∞–Ω—ã –≤–∫–ª—é—á–∞—é—Ç 14-–¥–Ω–µ–≤–Ω—ã–π –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥. –ù–∏–∫–∞–∫–∏—Ö –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤ –∏ —Å–∫—Ä—ã—Ç—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π.
                </p>
              </div>
              <div>
                <h4 className="font-semibold text-gray-900 mb-2">
                  –ß—Ç–æ –≤–∫–ª—é—á–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–±—Ä–∏–∫?
                </h4>
                <p className="text-gray-600 text-sm">
                  –ú—ã –ø—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç—ã, —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã, –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã–µ –º–æ—â–Ω–æ—Å—Ç–∏, –∫–∞—á–µ—Å—Ç–≤–æ –æ–±—Ä–∞–∑—Ü–æ–≤ –∏ –æ—Ç–∑—ã–≤—ã –¥—Ä—É–≥–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤.
                </p>
              </div>
            </div>
            <div className="space-y-6">
              <div>
                <h4 className="font-semibold text-gray-900 mb-2">
                  –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç–µ –ª–∏ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏?
                </h4>
                <p className="text-gray-600 text-sm">
                  –î–∞, –º—ã –ø—Ä–∏–Ω–∏–º–∞–µ–º –≤—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –≤–∞–ª—é—Ç—ã –∏ —Å–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã: –∫–∞—Ä—Ç—ã, –±–∞–Ω–∫–æ–≤—Å–∫–∏–µ –ø–µ—Ä–µ–≤–æ–¥—ã, PayPal.
                </p>
              </div>
              <div>
                <h4 className="font-semibold text-gray-900 mb-2">
                  –ß—Ç–æ –µ—Å–ª–∏ —Ñ–∞–±—Ä–∏–∫–∞ –Ω–µ –ø–æ–¥–æ–π–¥–µ—Ç?
                </h4>
                <p className="text-gray-600 text-sm">
                  –£ –Ω–∞—Å –µ—Å—Ç—å –≥–∞—Ä–∞–Ω—Ç–∏—è –∫–∞—á–µ—Å—Ç–≤–∞. –ï—Å–ª–∏ —Ñ–∞–±—Ä–∏–∫–∞ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∑–∞—è–≤–ª–µ–Ω–Ω—ã–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º, –º—ã –Ω–∞–π–¥–µ–º –∑–∞–º–µ–Ω—É –∏–ª–∏ –≤–µ—Ä–Ω–µ–º –¥–µ–Ω—å–≥–∏.
                </p>
              </div>
              <div>
                <h4 className="font-semibold text-gray-900 mb-2">
                  –ö–∞–∫ –±—ã—Å—Ç—Ä–æ –ø–æ–ª—É—á—É –¥–æ—Å—Ç—É–ø –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã?
                </h4>
                <p className="text-gray-600 text-sm">
                  –î–æ—Å—Ç—É–ø –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã. –í—ã —Å—Ä–∞–∑—É —Å–º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —Ñ–∞–±—Ä–∏–∫–∏ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å RFQ.
                </p>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* CTA */}
      <section className="py-16 bg-gradient-to-r from-primary to-accent-purple">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
          <div className="text-white">
            <h2 className="text-3xl md:text-4xl font-bold mb-4">
              –ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å?
            </h2>
            <p className="text-xl opacity-90 mb-8 max-w-2xl mx-auto">
              –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ 1000+ –±—Ä–µ–Ω–¥–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –Ω–∞—à–ª–∏ —Å–≤–æ–∏—Ö –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤
            </p>
            <div className="flex flex-col sm:flex-row gap-4 justify-center">
              <Button 
                size="lg" 
                className="bg-white text-primary hover:bg-gray-100 px-8 py-3"
                onClick={() => handleSelectPlan('professional')}
              >
                –ù–∞—á–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ
                <ArrowRight className="w-4 h-4 ml-2" />
              </Button>
              <Button 
                size="lg" 
                variant="outline" 
                className="border-white text-white hover:bg-white hover:text-primary px-8 py-3"
              >
                <Shield className="w-4 h-4 mr-2" />
                –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏
              </Button>
            </div>
          </div>
        </div>
      </section>
    </div>
  );
}