const { createClient } = require('@supabase/supabase-js');
const fs = require('fs');
const path = require('path');

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
require('dotenv').config({ path: path.join(__dirname, '.env.local') });

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;

if (!supabaseUrl || !supabaseServiceKey) {
  console.error('‚ùå –û—à–∏–±–∫–∞: –ù–µ –Ω–∞–π–¥–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è Supabase');
  console.error('–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª .env.local —Å–æ–¥–µ—Ä–∂–∏—Ç:');
  console.error('- NEXT_PUBLIC_SUPABASE_URL');
  console.error('- SUPABASE_SERVICE_ROLE_KEY');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseServiceKey);

async function executeSQL() {
  try {
    console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ SQL-—Å–∫—Ä–∏–ø—Ç–∞...');
    
    // –ß–∏—Ç–∞–µ–º SQL-—Ñ–∞–π–ª
    const sqlFile = path.join(__dirname, 'add_website_field.sql');
    const sqlContent = fs.readFileSync(sqlFile, 'utf8');
    
    console.log('üìÑ SQL-—Å–∫—Ä–∏–ø—Ç –∑–∞–≥—Ä—É–∂–µ–Ω');
    
    // –í—ã–ø–æ–ª–Ω—è–µ–º SQL —á–µ—Ä–µ–∑ Supabase
    const { data, error } = await supabase.rpc('exec_sql', { sql: sqlContent });
    
    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ SQL:', error);
      
      // –ü–æ–ø—Ä–æ–±—É–µ–º –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å—ã –ø–æ –æ—Ç–¥–µ–ª—å–Ω–æ—Å—Ç–∏
      console.log('üîÑ –ü—Ä–æ–±—É–µ–º –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å—ã –ø–æ –æ—Ç–¥–µ–ª—å–Ω–æ—Å—Ç–∏...');
      
      // 1. –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ website
      const { error: alterError } = await supabase.rpc('exec_sql', { 
        sql: 'ALTER TABLE factories ADD COLUMN IF NOT EXISTS website TEXT;' 
      });
      
      if (alterError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—è website:', alterError);
      } else {
        console.log('‚úÖ –ü–æ–ª–µ website –¥–æ–±–∞–≤–ª–µ–Ω–æ');
      }
      
      // 2. –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
      const { error: commentError } = await supabase.rpc('exec_sql', { 
        sql: "COMMENT ON COLUMN factories.website IS '–í–µ–±-—Å–∞–π—Ç —Ñ–∞–±—Ä–∏–∫–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)';" 
      });
      
      if (commentError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è:', commentError);
      } else {
        console.log('‚úÖ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–æ–±–∞–≤–ª–µ–Ω');
      }
      
      // 3. –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
      const { error: updateError } = await supabase.rpc('exec_sql', { 
        sql: `
          UPDATE factories 
          SET website = CASE 
              WHEN legal_name_en ILIKE '%Golden Thread%' THEN 'https://www.goldenthread.com'
              WHEN legal_name_en ILIKE '%Sunrise%' THEN 'https://www.sunrisetextile.com'
              WHEN legal_name_en ILIKE '%Imperial%' THEN 'https://www.imperialweaving.com'
              WHEN legal_name_en ILIKE '%Oriental%' THEN 'https://www.orientalsilk.com'
              WHEN legal_name_en ILIKE '%South China%' THEN 'https://www.southchina.com'
              ELSE NULL
          END
          WHERE website IS NULL;
        ` 
      });
      
      if (updateError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:', updateError);
      } else {
        console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã');
      }
      
    } else {
      console.log('‚úÖ SQL-—Å–∫—Ä–∏–ø—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ');
      console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç:', data);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç...');
    
    const { data: checkData, error: checkError } = await supabase
      .from('factories')
      .select('legal_name_en, wechat_id, phone, email, website, address_cn')
      .limit(5);
    
    if (checkError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –¥–∞–Ω–Ω—ã—Ö:', checkError);
    } else {
      console.log('‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö:');
      console.table(checkData);
    }
    
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

executeSQL();
